{
  "address": "0x8f3aB2bE32dA1F5b1Db934946FDC5f5415140f8B",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_uniswapV3Router",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_uniswapV3Quoter",
          "type": "address"
        },
        {
          "internalType": "address[]",
          "name": "_paths",
          "type": "address[]"
        },
        {
          "internalType": "uint24[]",
          "name": "_fees",
          "type": "uint24[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountOutMin",
          "type": "uint256"
        }
      ],
      "name": "convertExactTokensForTokens",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountOut",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountInMax",
          "type": "uint256"
        }
      ],
      "name": "convertTokensForExactTokens",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "destination",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "fees",
      "outputs": [
        {
          "internalType": "uint24",
          "name": "",
          "type": "uint24"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountOut",
          "type": "uint256"
        }
      ],
      "name": "getAmountIn",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        }
      ],
      "name": "getAmountOut",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pathForExactIn",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pathForExactOut",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "paths",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "seize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "source",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "uniswapV3Quoter",
      "outputs": [
        {
          "internalType": "contract IQuoter",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "uniswapV3Router",
      "outputs": [
        {
          "internalType": "contract ISwapRouter",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xac685fc9baa6c6059fcb2410670380ff76e52b29655ede838d46ca1d3bef14d9",
  "receipt": {
    "to": null,
    "from": "0x1BA608D6a354fbEb41FD7cC799e7f09b2612AB26",
    "contractAddress": "0x8f3aB2bE32dA1F5b1Db934946FDC5f5415140f8B",
    "transactionIndex": 0,
    "gasUsed": "1440522",
    "logsBloom": "0x
    "blockHash": "0xa1a51c8a207dc5f4008851d2d0157be1177f3eb8109dc8d746c41797175bf781",
    "transactionHash": "0xac685fc9baa6c6059fcb2410670380ff76e52b29655ede838d46ca1d3bef14d9",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 15355539,
        "transactionHash": "0xac685fc9baa6c6059fcb2410670380ff76e52b29655ede838d46ca1d3bef14d9",
        "address": "0x8f3aB2bE32dA1F5b1Db934946FDC5f5415140f8B",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000001ba608d6a354fbeb41fd7cc799e7f09b2612ab26"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0xa1a51c8a207dc5f4008851d2d0157be1177f3eb8109dc8d746c41797175bf781"
      }
    ],
    "blockNumber": 15355539,
    "cumulativeGasUsed": "1440522",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xE592427A0AEce92De3Edee1F18E0157C05861564",
    "0xb27308f9F90D607463bb33eA1BeBb41C27CE5AB6",
    [
      "0x9e1028F5F1D5eDE59748FFceE5532509976840E0",
      "0x4200000000000000000000000000000000000006",
      "0x7F5c764cBc14f9669B88837ca1490cCa17c31607"
    ],
    [
      3000,
      500
    ]
  ],
  "numDeployments": 1,
  "solcInputHash": "eb99769ab07cc47b68caa4662eb26299",
  "metadata": "{\"compiler\":{\"version\":\"0.8.2+commit.661d1103\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_uniswapV3Router\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_uniswapV3Quoter\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"_paths\",\"type\":\"address[]\"},{\"internalType\":\"uint24[]\",\"name\":\"_fees\",\"type\":\"uint24[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"}],\"name\":\"convertExactTokensForTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"}],\"name\":\"convertTokensForExactTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"destination\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"fees\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"name\":\"getAmountIn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"name\":\"getAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pathForExactIn\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pathForExactOut\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"paths\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"seize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"source\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswapV3Quoter\",\"outputs\":[{\"internalType\":\"contract IQuoter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswapV3Router\",\"outputs\":[{\"internalType\":\"contract ISwapRouter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/converters/UniswapV3Converter.sol\":\"UniswapV3Converter\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/draft-IERC20Permit.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\\n *\\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\\n * need to send a transaction, and thus is not required to hold Ether at all.\\n */\\ninterface IERC20Permit {\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\\n     * given ``owner``'s signed approval.\\n     *\\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\\n     * ordering also apply here.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `deadline` must be a timestamp in the future.\\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\\n     * over the EIP712-formatted function arguments.\\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\\n     *\\n     * For more information on the signature format, see the\\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\\n     * section].\\n     */\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    /**\\n     * @dev Returns the current nonce for `owner`. This value must be\\n     * included whenever a signature is generated for {permit}.\\n     *\\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\\n     * prevents a signature from being used multiple times.\\n     */\\n    function nonces(address owner) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\nimport \\\"../extensions/draft-IERC20Permit.sol\\\";\\nimport \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    function safeTransfer(\\n        IERC20 token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(\\n        IERC20 token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            uint256 newAllowance = oldAllowance - value;\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n        }\\n    }\\n\\n    function safePermit(\\n        IERC20Permit token,\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) internal {\\n        uint256 nonceBefore = token.nonces(owner);\\n        token.permit(owner, spender, value, deadline, v, r, s);\\n        uint256 nonceAfter = token.nonces(owner);\\n        require(nonceAfter == nonceBefore + 1, \\\"SafeERC20: permit did not succeed\\\");\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) {\\n            // Return data is optional\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x032807210d1d7d218963d7355d62e021a84bf1b3339f4f50be2f63b53cccaf29\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title Callback for IUniswapV3PoolActions#swap\\n/// @notice Any contract that calls IUniswapV3PoolActions#swap must implement this interface\\ninterface IUniswapV3SwapCallback {\\n    /// @notice Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\\n    /// @dev In the implementation you must pay the pool tokens owed for the swap.\\n    /// The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\\n    /// amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\\n    /// @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\\n    /// the end of the swap. If positive, the callback must send that amount of token0 to the pool.\\n    /// @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\\n    /// the end of the swap. If positive, the callback must send that amount of token1 to the pool.\\n    /// @param data Any data passed through by the caller via the IUniswapV3PoolActions#swap call\\n    function uniswapV3SwapCallback(\\n        int256 amount0Delta,\\n        int256 amount1Delta,\\n        bytes calldata data\\n    ) external;\\n}\\n\",\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\"},\"@uniswap/v3-periphery/contracts/interfaces/IQuoter.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.7.5;\\npragma abicoder v2;\\n\\n/// @title Quoter Interface\\n/// @notice Supports quoting the calculated amounts from exact input or exact output swaps\\n/// @dev These functions are not marked view because they rely on calling non-view functions and reverting\\n/// to compute the result. They are also not gas efficient and should not be called on-chain.\\ninterface IQuoter {\\n    /// @notice Returns the amount out received for a given exact input swap without executing the swap\\n    /// @param path The path of the swap, i.e. each token pair and the pool fee\\n    /// @param amountIn The amount of the first token to swap\\n    /// @return amountOut The amount of the last token that would be received\\n    function quoteExactInput(bytes memory path, uint256 amountIn) external returns (uint256 amountOut);\\n\\n    /// @notice Returns the amount out received for a given exact input but for a swap of a single pool\\n    /// @param tokenIn The token being swapped in\\n    /// @param tokenOut The token being swapped out\\n    /// @param fee The fee of the token pool to consider for the pair\\n    /// @param amountIn The desired input amount\\n    /// @param sqrtPriceLimitX96 The price limit of the pool that cannot be exceeded by the swap\\n    /// @return amountOut The amount of `tokenOut` that would be received\\n    function quoteExactInputSingle(\\n        address tokenIn,\\n        address tokenOut,\\n        uint24 fee,\\n        uint256 amountIn,\\n        uint160 sqrtPriceLimitX96\\n    ) external returns (uint256 amountOut);\\n\\n    /// @notice Returns the amount in required for a given exact output swap without executing the swap\\n    /// @param path The path of the swap, i.e. each token pair and the pool fee. Path must be provided in reverse order\\n    /// @param amountOut The amount of the last token to receive\\n    /// @return amountIn The amount of first token required to be paid\\n    function quoteExactOutput(bytes memory path, uint256 amountOut) external returns (uint256 amountIn);\\n\\n    /// @notice Returns the amount in required to receive the given exact output amount but for a swap of a single pool\\n    /// @param tokenIn The token being swapped in\\n    /// @param tokenOut The token being swapped out\\n    /// @param fee The fee of the token pool to consider for the pair\\n    /// @param amountOut The desired output amount\\n    /// @param sqrtPriceLimitX96 The price limit of the pool that cannot be exceeded by the swap\\n    /// @return amountIn The amount required as the input for the swap in order to receive `amountOut`\\n    function quoteExactOutputSingle(\\n        address tokenIn,\\n        address tokenOut,\\n        uint24 fee,\\n        uint256 amountOut,\\n        uint160 sqrtPriceLimitX96\\n    ) external returns (uint256 amountIn);\\n}\\n\",\"keccak256\":\"0x124b4334f058f70afd8f3b04315cc0812961d400957225d0875872b2a31afbff\",\"license\":\"GPL-2.0-or-later\"},\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.7.5;\\npragma abicoder v2;\\n\\nimport '@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol';\\n\\n/// @title Router token swapping functionality\\n/// @notice Functions for swapping tokens via Uniswap V3\\ninterface ISwapRouter is IUniswapV3SwapCallback {\\n    struct ExactInputSingleParams {\\n        address tokenIn;\\n        address tokenOut;\\n        uint24 fee;\\n        address recipient;\\n        uint256 deadline;\\n        uint256 amountIn;\\n        uint256 amountOutMinimum;\\n        uint160 sqrtPriceLimitX96;\\n    }\\n\\n    /// @notice Swaps `amountIn` of one token for as much as possible of another token\\n    /// @param params The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\\n    /// @return amountOut The amount of the received token\\n    function exactInputSingle(ExactInputSingleParams calldata params) external payable returns (uint256 amountOut);\\n\\n    struct ExactInputParams {\\n        bytes path;\\n        address recipient;\\n        uint256 deadline;\\n        uint256 amountIn;\\n        uint256 amountOutMinimum;\\n    }\\n\\n    /// @notice Swaps `amountIn` of one token for as much as possible of another along the specified path\\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\\n    /// @return amountOut The amount of the received token\\n    function exactInput(ExactInputParams calldata params) external payable returns (uint256 amountOut);\\n\\n    struct ExactOutputSingleParams {\\n        address tokenIn;\\n        address tokenOut;\\n        uint24 fee;\\n        address recipient;\\n        uint256 deadline;\\n        uint256 amountOut;\\n        uint256 amountInMaximum;\\n        uint160 sqrtPriceLimitX96;\\n    }\\n\\n    /// @notice Swaps as little as possible of one token for `amountOut` of another token\\n    /// @param params The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\\n    /// @return amountIn The amount of the input token\\n    function exactOutputSingle(ExactOutputSingleParams calldata params) external payable returns (uint256 amountIn);\\n\\n    struct ExactOutputParams {\\n        bytes path;\\n        address recipient;\\n        uint256 deadline;\\n        uint256 amountOut;\\n        uint256 amountInMaximum;\\n    }\\n\\n    /// @notice Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\\n    /// @return amountIn The amount of the input token\\n    function exactOutput(ExactOutputParams calldata params) external payable returns (uint256 amountIn);\\n}\\n\",\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\"},\"contracts/converters/UniswapV3Converter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\nimport \\\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\\\";\\nimport \\\"@uniswap/v3-periphery/contracts/interfaces/IQuoter.sol\\\";\\nimport \\\"../interfaces/IConverter.sol\\\";\\n\\ncontract UniswapV3Converter is Ownable, IConverter {\\n    using SafeERC20 for IERC20;\\n\\n    ISwapRouter public immutable uniswapV3Router;\\n    IQuoter public immutable uniswapV3Quoter;\\n    address private immutable _source;\\n    address private immutable _destination;\\n    address[] public paths;\\n    uint24[] public fees;\\n    bytes public pathForExactIn;\\n    bytes public pathForExactOut;\\n\\n    constructor(\\n        address _uniswapV3Router,\\n        address _uniswapV3Quoter,\\n        address[] memory _paths,\\n        uint24[] memory _fees\\n    ) {\\n        uniswapV3Router = ISwapRouter(_uniswapV3Router);\\n        uniswapV3Quoter = IQuoter(_uniswapV3Quoter);\\n        _source = _paths[0];\\n        _destination = _paths[_paths.length - 1];\\n        paths = _paths;\\n        fees = _fees;\\n\\n        // encode the path\\n        for (uint256 i = 0; i < _paths.length; i++) {\\n            pathForExactIn = abi.encodePacked(pathForExactIn, _paths[i]);\\n            pathForExactOut = abi.encodePacked(_paths[i], pathForExactOut);\\n            if (i != _paths.length - 1) {\\n                pathForExactIn = abi.encodePacked(pathForExactIn, _fees[i]);\\n                pathForExactOut = abi.encodePacked(_fees[i], pathForExactOut);\\n            }\\n        }\\n    }\\n\\n    /* ========== VIEW FUNCTIONS ========== */\\n\\n    function source() external view override returns (address) {\\n        return _source;\\n    }\\n\\n    function destination() external view override returns (address) {\\n        return _destination;\\n    }\\n\\n    /* ========== MUTATIVE FUNCTIONS ========== */\\n\\n    function getAmountOut(uint256 amountIn)\\n        external\\n        override\\n        returns (uint256)\\n    {\\n        return uniswapV3Quoter.quoteExactInput(pathForExactIn, amountIn);\\n    }\\n\\n    function getAmountIn(uint256 amountOut)\\n        external\\n        override\\n        returns (uint256)\\n    {\\n        return uniswapV3Quoter.quoteExactOutput(pathForExactOut, amountOut);\\n    }\\n\\n    function convertExactTokensForTokens(uint256 amountIn, uint256 amountOutMin)\\n        external\\n        override\\n        returns (uint256)\\n    {\\n        uint256 amountOut = this.getAmountOut(amountIn);\\n        require(amountOut >= amountOutMin, \\\"insufficient output amount\\\");\\n\\n        IERC20(_source).safeTransferFrom(msg.sender, address(this), amountIn);\\n        IERC20(_source).safeIncreaseAllowance(\\n            address(uniswapV3Router),\\n            amountIn\\n        );\\n        ISwapRouter.ExactInputParams memory params = ISwapRouter\\n            .ExactInputParams({\\n                path: pathForExactIn,\\n                recipient: msg.sender,\\n                deadline: block.timestamp + 3600, // 1 hour\\n                amountIn: amountIn,\\n                amountOutMinimum: amountOutMin\\n            });\\n        return uniswapV3Router.exactInput(params);\\n    }\\n\\n    function convertTokensForExactTokens(uint256 amountOut, uint256 amountInMax)\\n        external\\n        override\\n        returns (uint256)\\n    {\\n        uint256 amountIn = this.getAmountIn(amountOut);\\n        require(amountIn <= amountInMax, \\\"excessive input amount\\\");\\n\\n        IERC20(_source).safeTransferFrom(msg.sender, address(this), amountIn);\\n        IERC20(_source).safeIncreaseAllowance(\\n            address(uniswapV3Router),\\n            amountIn\\n        );\\n        ISwapRouter.ExactOutputParams memory params = ISwapRouter\\n            .ExactOutputParams({\\n                path: pathForExactOut,\\n                recipient: msg.sender,\\n                deadline: block.timestamp + 3600, // 1 hour\\n                amountOut: amountOut,\\n                amountInMaximum: amountInMax\\n            });\\n        return uniswapV3Router.exactOutput(params);\\n    }\\n\\n    /* ========== ADMIN FUNCTIONS ========== */\\n\\n    function seize(address token) external onlyOwner {\\n        uint256 balance = IERC20(token).balanceOf(address(this));\\n        IERC20(token).safeTransfer(msg.sender, balance);\\n    }\\n}\\n\",\"keccak256\":\"0x21ba0ecdabbd6c06842c2b93ec290f27dca9bf2f1b37585a18069cfe0591c484\",\"license\":\"MIT\"},\"contracts/interfaces/IConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\ninterface IConverter {\\n    function convertExactTokensForTokens(uint256 amountIn, uint256 amountOutMin)\\n        external\\n        returns (uint256);\\n\\n    function convertTokensForExactTokens(uint256 amountOut, uint256 amountInMax)\\n        external\\n        returns (uint256);\\n\\n    function getAmountOut(uint256 amountIn) external returns (uint256);\\n\\n    function getAmountIn(uint256 amountOut) external returns (uint256);\\n\\n    function source() external view returns (address);\\n\\n    function destination() external view returns (address);\\n}\\n\",\"keccak256\":\"0xefbdbec8b1995b6fe4fe752e5f889e670e53d9cfada5aae4d7e995337a775794\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x6101006040523480156200001257600080fd5b5060405162001b5a38038062001b5a83398101604081905262000035916200058e565b6200004033620002f0565b6001600160601b0319606085811b821660805284901b1660a052815182906000906200007c57634e487b7160e01b600052603260045260246000fd5b60200260200101516001600160a01b031660c0816001600160a01b031660601b815250508160018351620000b191906200081b565b81518110620000d057634e487b7160e01b600052603260045260246000fd5b60209081029190910181015160601b6001600160601b03191660e052825162000100916001919085019062000340565b50805162000116906002906020840190620003aa565b5060005b8251811015620002e55760038382815181106200014757634e487b7160e01b600052603260045260246000fd5b6020026020010151604051602001620001629291906200074c565b604051602081830303815290604052600390805190602001906200018892919062000458565b50828181518110620001aa57634e487b7160e01b600052603260045260246000fd5b60200260200101516004604051602001620001c792919062000722565b60405160208183030381529060405260049080519060200190620001ed92919062000458565b5060018351620001fe91906200081b565b8114620002d05760038282815181106200022857634e487b7160e01b600052603260045260246000fd5b60200260200101516040516020016200024392919062000776565b604051602081830303815290604052600390805190602001906200026992919062000458565b508181815181106200028b57634e487b7160e01b600052603260045260246000fd5b60200260200101516004604051602001620002a8929190620007a0565b60405160208183030381529060405260049080519060200190620002ce92919062000458565b505b80620002dc8162000872565b9150506200011a565b5050505050620008bc565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b82805482825590600052602060002090810192821562000398579160200282015b828111156200039857825182546001600160a01b0319166001600160a01b0390911617825560209092019160019091019062000361565b50620003a6929150620004d5565b5090565b82805482825590600052602060002090600901600a90048101928215620003985791602002820160005b838211156200041857835183826101000a81548162ffffff021916908362ffffff1602179055509260200192600301602081600201049283019260010302620003d4565b8015620004495782816101000a81549062ffffff021916905560030160208160020104928301926001030262000418565b5050620003a6929150620004d5565b828054620004669062000835565b90600052602060002090601f0160209004810192826200048a576000855562000398565b82601f10620004a557805160ff191683800117855562000398565b8280016001018555821562000398579182015b8281111562000398578251825591602001919060010190620004b8565b5b80821115620003a65760008155600101620004d6565b80516001600160a01b03811681146200050457600080fd5b919050565b600082601f8301126200051a578081fd5b81516020620005336200052d83620007f5565b620007c2565b828152818101908583018385028701840188101562000550578586fd5b855b858110156200058157815162ffffff811681146200056e578788fd5b8452928401929084019060010162000552565b5090979650505050505050565b60008060008060808587031215620005a4578384fd5b620005af85620004ec565b93506020620005c0818701620004ec565b60408701519094506001600160401b0380821115620005dd578485fd5b818801915088601f830112620005f1578485fd5b8151620006026200052d82620007f5565b81815284810190848601868402860187018d10156200061f578889fd5b8895505b838610156200064c576200063781620004ec565b83526001959095019491860191860162000623565b5060608b0151909750945050508083111562000666578384fd5b5050620006768782880162000509565b91505092959194509250565b8054600090600281046001808316806200069d57607f831692505b6020808410821415620006be57634e487b7160e01b86526022600452602486fd5b818015620006d55760018114620006e75762000716565b60ff1986168952848901965062000716565b60008881526020902060005b868110156200070e5781548b820152908501908301620006f3565b505084890196505b50505050505092915050565b606083901b6001600160601b0319168152600062000744601483018462000682565b949350505050565b60006200075a828562000682565b60609390931b6001600160601b03191683525050601401919050565b600062000784828562000682565b60e89390931b6001600160e81b03191683525050600301919050565b60e883901b6001600160e81b0319168152600062000744600383018462000682565b604051601f8201601f191681016001600160401b0381118282101715620007ed57620007ed620008a6565b604052919050565b60006001600160401b03821115620008115762000811620008a6565b5060209081020190565b60008282101562000830576200083062000890565b500390565b6002810460018216806200084a57607f821691505b602082108114156200086c57634e487b7160e01b600052602260045260246000fd5b50919050565b600060001982141562000889576200088962000890565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b60805160601c60a05160601c60c05160601c60e05160601c6112126200094860003960006102360152600081816101ba0152818161047f015281816104b401528181610810015261084501526000818161017501528181610301015261067d01526000818161010a015281816104d6015281816105be01528181610867015261094f01526112126000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c80639b4faa8011610097578063e8c9317111610066578063e8c931711461026d578063f2fde38b14610275578063fb3ee57114610288578063fc1bcd491461029b57610100565b80639b4faa801461020c5780639f7d5d351461021f578063b269681d14610234578063b9e355ea1461025a57610100565b806367e828bf116100d357806367e828bf146101b8578063715018a6146101de5780637568fdcc146101e85780638da5cb5b146101fb57610100565b80632c76d7a6146101055780634acc79ed146101495780634d20d0f8146101705780635c19521714610197575b600080fd5b61012c7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b61015c610157366004610f92565b6102ae565b60405162ffffff9091168152602001610140565b61012c7f000000000000000000000000000000000000000000000000000000000000000081565b6101aa6101a5366004610f92565b6102e7565b604051908152602001610140565b7f000000000000000000000000000000000000000000000000000000000000000061012c565b6101e6610391565b005b6101aa6101f6366004610fc2565b6103a5565b6000546001600160a01b031661012c565b6101aa61021a366004610f92565b610663565b6102276106b4565b604051610140919061107c565b7f000000000000000000000000000000000000000000000000000000000000000061012c565b6101aa610268366004610fc2565b610742565b610227610999565b6101e6610283366004610f4b565b6109a6565b6101e6610296366004610f4b565b610a1f565b61012c6102a9366004610f92565b610abb565b600281815481106102be57600080fd5b90600052602060002090600a9182820401919006600302915054906101000a900462ffffff1681565b60405163cdca175360e01b81526000906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063cdca17539061033990600390869060040161108f565b602060405180830381600087803b15801561035357600080fd5b505af1158015610367573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061038b9190610faa565b92915050565b610399610ae5565b6103a36000610b3f565b565b604051635c19521760e01b81526004810183905260009081903090635c19521790602401602060405180830381600087803b1580156103e357600080fd5b505af11580156103f7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061041b9190610faa565b9050828110156104725760405162461bcd60e51b815260206004820152601a60248201527f696e73756666696369656e74206f757470757420616d6f756e7400000000000060448201526064015b60405180910390fd5b6104a76001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016333087610b8f565b6104fb6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000167f000000000000000000000000000000000000000000000000000000000000000086610c00565b60006040518060a0016040528060038054610515906111a1565b80601f0160208091040260200160405190810160405280929190818152602001828054610541906111a1565b801561058e5780601f106105635761010080835404028352916020019161058e565b820191906000526020600020905b81548152906001019060200180831161057157829003601f168201915b50505091835250503360208201526040016105ab42610e10611151565b81526020018681526020018581525090507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663c04b8d59826040518263ffffffff1660e01b8152600401610608919061113e565b602060405180830381600087803b15801561062257600080fd5b505af1158015610636573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061065a9190610faa565b95945050505050565b604051632f80bb1d60e01b81526000906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690632f80bb1d90610339906004908690820161108f565b600480546106c1906111a1565b80601f01602080910402602001604051908101604052809291908181526020018280546106ed906111a1565b801561073a5780601f1061070f5761010080835404028352916020019161073a565b820191906000526020600020905b81548152906001019060200180831161071d57829003601f168201915b505050505081565b6040516301369f5560e71b81526004810183905260009081903090639b4faa8090602401602060405180830381600087803b15801561078057600080fd5b505af1158015610794573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107b89190610faa565b9050828111156108035760405162461bcd60e51b8152602060048201526016602482015275195e18d95cdcda5d99481a5b9c1d5d08185b5bdd5b9d60521b6044820152606401610469565b6108386001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016333084610b8f565b61088c6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000167f000000000000000000000000000000000000000000000000000000000000000083610c00565b60006040518060a00160405280600480546108a6906111a1565b80601f01602080910402602001604051908101604052809291908181526020018280546108d2906111a1565b801561091f5780601f106108f45761010080835404028352916020019161091f565b820191906000526020600020905b81548152906001019060200180831161090257829003601f168201915b505050918352505033602082015260400161093c42610e10611151565b81526020018681526020018581525090507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663f28c0498826040518263ffffffff1660e01b8152600401610608919061113e565b600380546106c1906111a1565b6109ae610ae5565b6001600160a01b038116610a135760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610469565b610a1c81610b3f565b50565b610a27610ae5565b6040516370a0823160e01b81523060048201526000906001600160a01b038316906370a082319060240160206040518083038186803b158015610a6957600080fd5b505afa158015610a7d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aa19190610faa565b9050610ab76001600160a01b0383163383610cc1565b5050565b60018181548110610acb57600080fd5b6000918252602090912001546001600160a01b0316905081565b6000546001600160a01b031633146103a35760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610469565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6040516001600160a01b0380851660248301528316604482015260648101829052610bfa9085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610cf6565b50505050565b604051636eb1769f60e11b81523060048201526001600160a01b038381166024830152600091839186169063dd62ed3e9060440160206040518083038186803b158015610c4c57600080fd5b505afa158015610c60573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c849190610faa565b610c8e9190611151565b6040516001600160a01b038516602482015260448101829052909150610bfa90859063095ea7b360e01b90606401610bc3565b6040516001600160a01b038316602482015260448101829052610cf190849063a9059cbb60e01b90606401610bc3565b505050565b6000610d4b826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610dc89092919063ffffffff16565b805190915015610cf15780806020019051810190610d699190610f72565b610cf15760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610469565b6060610dd78484600085610de1565b90505b9392505050565b606082471015610e425760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610469565b6001600160a01b0385163b610e995760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610469565b600080866001600160a01b03168587604051610eb59190611060565b60006040518083038185875af1925050503d8060008114610ef2576040519150601f19603f3d011682016040523d82523d6000602084013e610ef7565b606091505b5091509150610f07828286610f12565b979650505050505050565b60608315610f21575081610dda565b825115610f315782518084602001fd5b8160405162461bcd60e51b8152600401610469919061107c565b600060208284031215610f5c578081fd5b81356001600160a01b0381168114610dda578182fd5b600060208284031215610f83578081fd5b81518015158114610dda578182fd5b600060208284031215610fa3578081fd5b5035919050565b600060208284031215610fbb578081fd5b5051919050565b60008060408385031215610fd4578081fd5b50508035926020909101359150565b60008151808452610ffb816020860160208601611175565b601f01601f19169290920160200192915050565b6000815160a0845261102460a0850182610fe3565b6020848101516001600160a01b031690860152604080850151908601526060808501519086015260809384015193909401929092525090919050565b60008251611072818460208701611175565b9190910192915050565b600060208252610dda6020830184610fe3565b6040815282546000908190600281046001808316806110af57607f831692505b60208084108214156110cf57634e487b7160e01b87526022600452602487fd5b60408801849052606088018280156110ee57600181146110ff57611129565b60ff19871682528282019750611129565b60008c815260209020895b878110156111235781548482015290860190840161110a565b83019850505b50509690960196909652509095945050505050565b600060208252610dda602083018461100f565b6000821982111561117057634e487b7160e01b81526011600452602481fd5b500190565b60005b83811015611190578181015183820152602001611178565b83811115610bfa5750506000910152565b6002810460018216806111b557607f821691505b602082108114156111d657634e487b7160e01b600052602260045260246000fd5b5091905056fea26469706673582212207061188ad38a58b57292afd66cc365c8164b49e7296c54db8221803e71f218a364736f6c63430008020033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101005760003560e01c80639b4faa8011610097578063e8c9317111610066578063e8c931711461026d578063f2fde38b14610275578063fb3ee57114610288578063fc1bcd491461029b57610100565b80639b4faa801461020c5780639f7d5d351461021f578063b269681d14610234578063b9e355ea1461025a57610100565b806367e828bf116100d357806367e828bf146101b8578063715018a6146101de5780637568fdcc146101e85780638da5cb5b146101fb57610100565b80632c76d7a6146101055780634acc79ed146101495780634d20d0f8146101705780635c19521714610197575b600080fd5b61012c7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b61015c610157366004610f92565b6102ae565b60405162ffffff9091168152602001610140565b61012c7f000000000000000000000000000000000000000000000000000000000000000081565b6101aa6101a5366004610f92565b6102e7565b604051908152602001610140565b7f000000000000000000000000000000000000000000000000000000000000000061012c565b6101e6610391565b005b6101aa6101f6366004610fc2565b6103a5565b6000546001600160a01b031661012c565b6101aa61021a366004610f92565b610663565b6102276106b4565b604051610140919061107c565b7f000000000000000000000000000000000000000000000000000000000000000061012c565b6101aa610268366004610fc2565b610742565b610227610999565b6101e6610283366004610f4b565b6109a6565b6101e6610296366004610f4b565b610a1f565b61012c6102a9366004610f92565b610abb565b600281815481106102be57600080fd5b90600052602060002090600a9182820401919006600302915054906101000a900462ffffff1681565b60405163cdca175360e01b81526000906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063cdca17539061033990600390869060040161108f565b602060405180830381600087803b15801561035357600080fd5b505af1158015610367573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061038b9190610faa565b92915050565b610399610ae5565b6103a36000610b3f565b565b604051635c19521760e01b81526004810183905260009081903090635c19521790602401602060405180830381600087803b1580156103e357600080fd5b505af11580156103f7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061041b9190610faa565b9050828110156104725760405162461bcd60e51b815260206004820152601a60248201527f696e73756666696369656e74206f757470757420616d6f756e7400000000000060448201526064015b60405180910390fd5b6104a76001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016333087610b8f565b6104fb6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000167f000000000000000000000000000000000000000000000000000000000000000086610c00565b60006040518060a0016040528060038054610515906111a1565b80601f0160208091040260200160405190810160405280929190818152602001828054610541906111a1565b801561058e5780601f106105635761010080835404028352916020019161058e565b820191906000526020600020905b81548152906001019060200180831161057157829003601f168201915b50505091835250503360208201526040016105ab42610e10611151565b81526020018681526020018581525090507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663c04b8d59826040518263ffffffff1660e01b8152600401610608919061113e565b602060405180830381600087803b15801561062257600080fd5b505af1158015610636573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061065a9190610faa565b95945050505050565b604051632f80bb1d60e01b81526000906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690632f80bb1d90610339906004908690820161108f565b600480546106c1906111a1565b80601f01602080910402602001604051908101604052809291908181526020018280546106ed906111a1565b801561073a5780601f1061070f5761010080835404028352916020019161073a565b820191906000526020600020905b81548152906001019060200180831161071d57829003601f168201915b505050505081565b6040516301369f5560e71b81526004810183905260009081903090639b4faa8090602401602060405180830381600087803b15801561078057600080fd5b505af1158015610794573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107b89190610faa565b9050828111156108035760405162461bcd60e51b8152602060048201526016602482015275195e18d95cdcda5d99481a5b9c1d5d08185b5bdd5b9d60521b6044820152606401610469565b6108386001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016333084610b8f565b61088c6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000167f000000000000000000000000000000000000000000000000000000000000000083610c00565b60006040518060a00160405280600480546108a6906111a1565b80601f01602080910402602001604051908101604052809291908181526020018280546108d2906111a1565b801561091f5780601f106108f45761010080835404028352916020019161091f565b820191906000526020600020905b81548152906001019060200180831161090257829003601f168201915b505050918352505033602082015260400161093c42610e10611151565b81526020018681526020018581525090507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663f28c0498826040518263ffffffff1660e01b8152600401610608919061113e565b600380546106c1906111a1565b6109ae610ae5565b6001600160a01b038116610a135760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610469565b610a1c81610b3f565b50565b610a27610ae5565b6040516370a0823160e01b81523060048201526000906001600160a01b038316906370a082319060240160206040518083038186803b158015610a6957600080fd5b505afa158015610a7d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aa19190610faa565b9050610ab76001600160a01b0383163383610cc1565b5050565b60018181548110610acb57600080fd5b6000918252602090912001546001600160a01b0316905081565b6000546001600160a01b031633146103a35760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610469565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6040516001600160a01b0380851660248301528316604482015260648101829052610bfa9085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610cf6565b50505050565b604051636eb1769f60e11b81523060048201526001600160a01b038381166024830152600091839186169063dd62ed3e9060440160206040518083038186803b158015610c4c57600080fd5b505afa158015610c60573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c849190610faa565b610c8e9190611151565b6040516001600160a01b038516602482015260448101829052909150610bfa90859063095ea7b360e01b90606401610bc3565b6040516001600160a01b038316602482015260448101829052610cf190849063a9059cbb60e01b90606401610bc3565b505050565b6000610d4b826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610dc89092919063ffffffff16565b805190915015610cf15780806020019051810190610d699190610f72565b610cf15760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610469565b6060610dd78484600085610de1565b90505b9392505050565b606082471015610e425760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610469565b6001600160a01b0385163b610e995760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610469565b600080866001600160a01b03168587604051610eb59190611060565b60006040518083038185875af1925050503d8060008114610ef2576040519150601f19603f3d011682016040523d82523d6000602084013e610ef7565b606091505b5091509150610f07828286610f12565b979650505050505050565b60608315610f21575081610dda565b825115610f315782518084602001fd5b8160405162461bcd60e51b8152600401610469919061107c565b600060208284031215610f5c578081fd5b81356001600160a01b0381168114610dda578182fd5b600060208284031215610f83578081fd5b81518015158114610dda578182fd5b600060208284031215610fa3578081fd5b5035919050565b600060208284031215610fbb578081fd5b5051919050565b60008060408385031215610fd4578081fd5b50508035926020909101359150565b60008151808452610ffb816020860160208601611175565b601f01601f19169290920160200192915050565b6000815160a0845261102460a0850182610fe3565b6020848101516001600160a01b031690860152604080850151908601526060808501519086015260809384015193909401929092525090919050565b60008251611072818460208701611175565b9190910192915050565b600060208252610dda6020830184610fe3565b6040815282546000908190600281046001808316806110af57607f831692505b60208084108214156110cf57634e487b7160e01b87526022600452602487fd5b60408801849052606088018280156110ee57600181146110ff57611129565b60ff19871682528282019750611129565b60008c815260209020895b878110156111235781548482015290860190840161110a565b83019850505b50509690960196909652509095945050505050565b600060208252610dda602083018461100f565b6000821982111561117057634e487b7160e01b81526011600452602481fd5b500190565b60005b83811015611190578181015183820152602001611178565b83811115610bfa5750506000910152565b6002810460018216806111b557607f821691505b602082108114156111d657634e487b7160e01b600052602260045260246000fd5b5091905056fea26469706673582212207061188ad38a58b57292afd66cc365c8164b49e7296c54db8221803e71f218a364736f6c63430008020033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 538,
        "contract": "contracts/converters/UniswapV3Converter.sol:UniswapV3Converter",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 4186,
        "contract": "contracts/converters/UniswapV3Converter.sol:UniswapV3Converter",
        "label": "paths",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 4189,
        "contract": "contracts/converters/UniswapV3Converter.sol:UniswapV3Converter",
        "label": "fees",
        "offset": 0,
        "slot": "2",
        "type": "t_array(t_uint24)dyn_storage"
      },
      {
        "astId": 4191,
        "contract": "contracts/converters/UniswapV3Converter.sol:UniswapV3Converter",
        "label": "pathForExactIn",
        "offset": 0,
        "slot": "3",
        "type": "t_bytes_storage"
      },
      {
        "astId": 4193,
        "contract": "contracts/converters/UniswapV3Converter.sol:UniswapV3Converter",
        "label": "pathForExactOut",
        "offset": 0,
        "slot": "4",
        "type": "t_bytes_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_array(t_uint24)dyn_storage": {
        "base": "t_uint24",
        "encoding": "dynamic_array",
        "label": "uint24[]",
        "numberOfBytes": "32"
      },
      "t_bytes_storage": {
        "encoding": "bytes",
        "label": "bytes",
        "numberOfBytes": "32"
      },
      "t_uint24": {
        "encoding": "inplace",
        "label": "uint24",
        "numberOfBytes": "3"
      }
    }
  }
}